% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gemini4R.R
\name{gemini4R}
\alias{gemini4R}
\title{Gemini API Request Function}
\usage{
gemini4R(
  mode,
  contents,
  store_history = FALSE,
  api_key = Sys.getenv("GoogleGemini_API_KEY"),
  max_token = 200,
  ...
)
}
\arguments{
\item{mode}{A character string specifying the mode. Valid values are "text", "stream_text", "chat", "stream_chat".}

\item{contents}{For "text" or "stream_text" modes, a character string with the input text.
For "chat" or "stream_chat" modes, a list of messages. Each message is a list with fields:
\code{role} (e.g., "user" or "model") and \code{text} (message content).}

\item{store_history}{Logical. If TRUE and in a chat mode, the chat history is stored in the environment
variable "chat_history" as a JSON string.}

\item{api_key}{A character string containing your Gemini API key.}

\item{max_token}{Integer. Optional. Maximum number of tokens for the generated output.}

\item{...}{Additional options passed to the HTTP request.}
}
\value{
For synchronous modes ("text", "chat"), a parsed JSON object is returned.
  For streaming modes ("stream_text", "stream_chat"), a list with \code{full_text} (combined output)
  and \code{chunks} (individual text pieces) is returned.
}
\description{
This function sends a request to the Gemini API to generate text or perform interactive chat.
It supports both synchronous and streaming modes.
}
\examples{
\dontrun{
  # Synchronous text generation:
  result <- gemini4R(
    mode = "text",
    api_key = Sys.getenv("GoogleGemini_API_KEY"),
    contents = "Explain how AI works",
    max_token = 256
  )
  print(result)

  # Synchronous chat mode with history storage:
  chat_history <- list(
    list(role = "user", text = "Hello"),
    list(role = "model", text = "Great to meet you. What would you like to know?"),
    list(role = "user", text = "I have two dogs in my house. How many paws are in my house?")
  )
  chat_result <- gemini4R(
    mode = "chat",
    api_key = Sys.getenv("GoogleGemini_API_KEY"),
    contents = chat_history,
    store_history = TRUE,
    max_token = 150
  )
  print(chat_result)

  # Streaming text generation:
  stream_result <- gemini4R(
    mode = "stream_text",
    api_key = Sys.getenv("GoogleGemini_API_KEY"),
    contents = "Write a story about a magic backpack.",
    max_token = 200
  )
  print(stream_result$full_text)
}
}
\author{
Satoshi Kume
}
